---
import type { MarkdownInstance } from "astro";
import type { Post } from "../types/post";

import BaseLayout from "./Layout.astro";
import Breadcrumbs from "../components/Breadcrumbs.astro";
import PostsListMasonry from "../components/PostsListMasonry.astro";
import { EHeader } from "../types/header";

const { destination } = Astro.params;

if (!destination) {
    Astro.redirect("/not-found");
}

const normalizedDestination = destination!
    .split("-")
    .map((word) => word[0].toUpperCase() + word.slice(1))
    .join(" ");

const posts = Object.values(
    import.meta.glob<MarkdownInstance<Post>>("../pages/posts/*.md", {
        eager: true,
    }),
);

const postsList = posts
    .filter(({ frontmatter }) => frontmatter.country === normalizedDestination)
    .sort(
        (a, b) =>
            +new Date(b.frontmatter.pubDate) - +new Date(a.frontmatter.pubDate),
    );
---

<BaseLayout
    title={"Destinations archive list | " + normalizedDestination}
    headerType={EHeader.TRANSPARENT}
>
    <Breadcrumbs />
    <section class="section">
        <div class="container">
            <PostsListMasonry posts={postsList} />
        </div>
    </section>
</BaseLayout>

<style>
    .section {
        padding: 70px 0 40px;
    }
</style>
