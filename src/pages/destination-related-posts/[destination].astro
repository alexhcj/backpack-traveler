---
import type { MarkdownInstance } from "astro";
import type { Post } from "../../types/post";

import DestinationRelatedPosts from "../../layouts/DestinationRelatedPostsLayout.astro";

export async function getStaticPaths() {
    const posts = Object.values(
        import.meta.glob<MarkdownInstance<Post>>("../posts/*.md", {
            eager: true,
        }),
    );
    const destinationsList: string[] = [
        ...new Set(
            posts.map(({ frontmatter }) =>
                frontmatter.country.replace(" ", "-").toLowerCase(),
            ),
        ),
    ];

    return destinationsList.map((destination) => {
        return {
            params: {
                destination: destination,
            },
        };
    });
}

const { destination } = Astro.params;

if (!destination) {
    throw new Error("Destination not found");
}
---

<DestinationRelatedPosts destination={destination} />
