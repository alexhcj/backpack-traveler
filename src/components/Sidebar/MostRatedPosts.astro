---
import type { MarkdownInstance } from "astro";
import type { Post } from "../../types/post";

interface Props {
    posts: MarkdownInstance<Post>[];
}
const { posts } = Astro.props;

const mostRatedPostList = posts
    .sort((a, b) => b.frontmatter.likesCount - a.frontmatter.likesCount)
    .slice(0, 6);
---

<div class="posts">
    <ul>
        {
            mostRatedPostList.map(
                ({ frontmatter: { slug, title, categories } }) => (
                    <li class="item">
                        <h3 class="ui-post-title f-xs">
                            <a href={`/posts/${slug}`}>{title}</a>
                        </h3>
                        <ul class="ui-post-categories">
                            {categories.map((category) => (
                                <li>
                                    <a
                                        class="ui-post-category"
                                        href={`/category/${category}`}
                                    >
                                        {category}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </li>
                ),
            )
        }
    </ul>
</div>

<style>
    .posts {
        padding: 20px calc(15px + 7%) 10px calc(15px + 5.5%);
        border: 1px solid var(--color-border);
    }
    .item {
        display: flex;
        flex-direction: column;
        gap: 8px;
        padding: 27px 0 23px;

        &:not(:last-child) {
            border-bottom: 1px solid var(--color-border);
        }
    }
    .ui-post-categories {
        justify-content: start;
    }
    .ui-post-category {
        margin-left: 2px;
        font-size: 8px;
    }
    .ui-post-category {
        display: block;
    }
    .img-box {
        margin-right: 24px;
        width: 87px;
        height: 87px;
        float: left;
    }
    .img {
        width: inherit;
        height: inherit;
    }
</style>
