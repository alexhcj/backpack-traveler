---
import type { MarkdownInstance } from "astro";
import type { IHeader } from "../types/header";
import type { Post } from "../types/post";

interface Props extends IHeader {}

const { type } = Astro.props;
import { Image } from "astro:assets";

import { getCountryShortcut } from "../utils/utils";
import InstagramSVG from "../../public/svg/instagram.svg";
import TwitterSVG from "../../public/svg/twitter.svg";
import FacebookSVG from "../../public/svg/facebook.svg";
import PinterestSVG from "../../public/svg/pinterest.svg";
import YoutubeSVG from "../../public/svg/youtube.svg";

const posts = Object.values(
    import.meta.glob<MarkdownInstance<Post>>("../pages/posts/*.md", {
        eager: true,
    }),
);
const uniqueDestinationsList = [
    ...new Set(posts.map((post) => post.frontmatter.country)),
];
const destinationsList = uniqueDestinationsList.map((country) => {
    return {
        url: country.toLowerCase().replace(" ", "-"),
        text: getCountryShortcut(country),
    };
});

// TODO: refactor: add type field for cursor pointer: if link pointer (route link), else default (popover menu)
const navList = [
    { url: "/", text: "Home" },
    { url: "/pages", text: "Pages" },
    { url: "/travel", text: "Travel" },
    { url: "/", text: "Logo" },
    { url: "/blog", text: "Blog" },
    { url: "/shop", text: "Shop" },
];
const pagesList = [
    { url: "who-we-are", text: "Who we are" },
    { url: "about-me", text: "About me" },
    { url: "destination-map", text: "Destination map" },
    { url: "get-in-touch", text: "Get in touch" },
    { url: "faq", text: "FAQ page" },
];
const socialsList = [
    { url: "/", icon: InstagramSVG, alt: "Instagram link" },
    { url: "/", icon: TwitterSVG, alt: "Twitter link" },
    { url: "/", icon: FacebookSVG, alt: "Facebook link" },
    { url: "/", icon: PinterestSVG, alt: "Pinterest link" },
    { url: "/", icon: YoutubeSVG, alt: "Youtube link" },
];

interface ISocial {
    url: string;
    icon: ImageMetadata;
    alt: string;
}
---

<header
    class:list={[
        "header",
        { long: type === "long" },
        { short: type === "short" },
        { full: type === "full" },
    ]}
>
    <div class:list={["container", { xl: type === "short" }]}>
        <div class="box">
            {
                type !== "short" && (
                    <div class="destinations">
                        <ul class="destination-list">
                            <li class="destination-item">
                                <img src="/images/earth-marker.png" alt="" />
                                <span class="text">Destinations</span>
                            </li>
                        </ul>
                        <ul class="popup-list">
                            {destinationsList.map((dest) => (
                                <li class="popup-item">
                                    <a
                                        class="popup-link"
                                        href={`/destinations/${dest.url}`}
                                    >
                                        {dest.text}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>
                )
            }
            {
                type === "short" && (
                    <a href="/">
                        <Image
                            src="/images/logo-short-dark.webp"
                            width="209"
                            height="45"
                            alt="Logo image"
                        />
                    </a>
                )
            }
            <nav class="nav">
                <ul class="nav-list">
                    {
                        navList.map((item, index) => (
                            <li class="nav-item">
                                {index === 3 && type === "full" ? (
                                    <Image
                                        src="/images/logo-short-dark.webp"
                                        width="256"
                                        height="55"
                                        alt="Logo image"
                                    />
                                ) : (
                                    <a
                                        class:list={[
                                            "nav-link",
                                            { "size-sm": type === "short" },
                                        ]}
                                        href={item.url}
                                    >
                                        {item.text}
                                    </a>
                                )}
                                {item.url === "/pages" && (
                                    <ul class="popup-list">
                                        {pagesList.map((item) => (
                                            <li class="popup-item">
                                                <a
                                                    class="popup-link"
                                                    href={`destination-map/${item.url}`}
                                                >
                                                    {item.text}
                                                </a>
                                            </li>
                                        ))}
                                    </ul>
                                )}
                            </li>
                        ))
                    }
                </ul>
            </nav>
            {
                type !== "short" && (
                    <div class="right-column">
                        <ul class="socials">
                            {socialsList.map((social: ISocial) => (
                                <li>
                                    <a href={social.url}>
                                        <img
                                            class="social-icon"
                                            src={social.icon.src}
                                            alt={social.alt}
                                        />
                                    </a>
                                </li>
                            ))}
                        </ul>
                        {type === "long" && (
                            <div class="search">
                                <span class="search-divider" />
                                <input
                                    class="search-input"
                                    id="search-input"
                                    placeholder="Search..."
                                    type="text"
                                    id="search"
                                />
                                <img
                                    class="search-magnifier"
                                    id="search-magnifier"
                                    src="/svg/magnifier.svg"
                                    width="19px"
                                    height="20px"
                                    alt="Search for posts"
                                />
                            </div>
                        )}
                    </div>
                )
            }
        </div>
    </div>
</header>

<style>
    .header {
        background-color: var(--color-primary);
        height: 60px;

        &.short {
            background-color: var(--color-white);
            height: 95px;
        }

        &.full {
            background-color: var(--color-white);
            height: 100px;
        }
    }

    .box {
        display: grid;
        grid-auto-flow: column;
        justify-content: space-between;
        align-items: center;
        height: 100%;
    }

    .destinations {
        position: relative;
        display: grid;
        align-items: center;
        height: 100%;

        &:hover .popup-list {
            opacity: 1;
            visibility: visible;
        }

        & .text {
            margin-top: 2px;
        }
    }

    .popup-list {
        position: absolute;
        top: calc(100% - 1px);
        left: 0;
        padding: 10px 30px;
        min-width: 142px;
        width: auto;
        opacity: 0;
        visibility: hidden;
        background-color: var(--color-white);
        border: 1px solid var(--color-border);
        z-index: var(--z-index-10);
        transition: var(--transition-default);
    }

    .popup-item {
        /* display: block; */
    }

    .popup-link {
        position: relative;
        text-transform: capitalize;
        letter-spacing: var(--letter-spacing-xs);
        font-size: 15px;
        color: var(--color-dark);
        font-family: var(--family-lora);

        &::before {
            position: absolute;
            top: 50%;
            left: 0;
            content: "";
            width: 6px;
            height: 6px;
            background-color: var(--color-secondary);
            border-radius: 10px;
            opacity: 0;
            transform: translateY(-50%) translateX(-4px);
            transition: var(--transition-default);
        }

        &:hover {
            color: var(--color-grey);
            padding-left: 13px;

            &::before {
                opacity: 1;
                transform: translateY(-50%) translateX(0);
            }
        }
    }

    .destination-item {
        display: grid;
        grid-auto-flow: column;
        align-items: center;
        gap: 10px;
        text-transform: uppercase;
        letter-spacing: var(--letter-spacing-default);
        font-size: 10px;
        font-weight: var(--weight-medium);
        cursor: pointer;
    }

    .nav {
        height: 100%;
    }

    .nav-list {
        display: grid;
        grid-auto-flow: column;
        align-items: center;
        height: 100%;
    }

    .nav-item {
        position: relative;
        display: grid;
        align-items: center;
        padding: 0 14px;
        height: 100%;

        &:has(.popup-list) {
            .popup-list {
                min-width: 210px;
            }
        }

        &:hover {
            .popup-list {
                opacity: 1;
                visibility: visible;
            }
        }
    }

    .nav-link {
        text-transform: uppercase;
        letter-spacing: var(--letter-spacing-default);
        line-height: 23px;
        font-size: 11px;
        font-weight: var(--weight-medium);

        &:hover {
            color: var(--color-grey);
        }

        &.size-sm {
            font-size: 10px;
        }
    }

    .right-column {
        display: grid;
        grid-auto-flow: column;
        align-items: center;
        gap: 18px;
    }

    .socials {
        display: grid;
        grid-auto-flow: column;
        gap: 13px;
    }

    .social-icon {
        width: 13px;
        height: 13px;
    }

    .search {
        position: relative;
        display: grid;
        grid-auto-flow: column;
        align-items: center;
    }

    .search-divider {
        position: absolute;
        top: 50%;
        left: 0;
        content: "";
        width: 1px;
        height: 15px;
        background-color: var(--color-grey-2);
        transform: translateY(-50%);
    }

    .search-input {
        padding-left: 7px;
        max-width: 164px;
        width: 0;
        line-height: 43px;
        font-size: 14px;
        color: var(--color-grey-3);
        font-family: var(--family-lora);
        font-weight: 400;
        font-style: italic;
        transition: var(--transition-input);

        &::placeholder {
            color: var(--color-grey-3);
            font-family: var(--family-lora);
        }

        &.active {
            width: 100%;
        }
    }

    .search-magnifier {
        margin: 10px 7px;
        transform: scaleX(-1);
        cursor: pointer;
    }
</style>

<script>
    const searchIcon = document.getElementById("search-magnifier");
    const searchInput = document.getElementById("search-input");

    searchIcon?.addEventListener("click", (e: any) => {
        e.target?.id === "search-magnifier" &&
            searchInput?.classList.add("active");
    });

    document.addEventListener("click", (e: any) => {
        if (e.target?.id === "search-input") return;

        e.target?.id !== "search-magnifier" &&
            searchInput?.classList.remove("active");
    });
</script>
